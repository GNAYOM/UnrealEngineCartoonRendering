//Toon Shader 修改
#include "../Common.ush"
#include "/Engine/Generated/materials.ush"
#include "/Engine/Generated/VertexFactory.ush"

struct FSimpleMeshPassVSToPS
{
	FVertexFactoryInterpolantsVSToPS FactoryInterpolants;
	float4 SvPosition : SV_POSITION;
};

float3 InputColor;

void MainVS(
	FVertexFactoryInput Input,
	out FSimpleMeshPassVSToPS Output)
{
	float4 ClipSpacePosition;
	ResolvedView = ResolvedView();

	FVertexFactoryIntermediates VFIntermediates
	= GetVertexFactoryIntermediates(Input);//输入数据存入其中，便于处理

	float4 WorldPos = VertexFactoryGetWorldPosition(Input,VFIntermediates);
	float4 WorldNormal = VertexFactoryGetWorldNormal(Input,VFIntermediates);

	float3x3 TangentToLocal = VertexFactoryGetTangentToLocal(Input,VFIntermediates);
	FMaterialVertexParameters VertexParameters
	= GetMaterialVertexParameters(Input,VFIntermediates,WorldPos.xyz,TangentToLocal);
	WorldPos.xyz += GetMaterialWorldPositionOffset(VertexParameters);

	float4 RasterizedWorldPosition = VertexFactoryGetRasterizedWorldPosition(Input,VFIntermediates,TangentToLocal);
	ClipSpacePosition = mul(RasterizedWorldPosition,ResolvedView.TranslatedWorldToClip);
	Output.SvPosition = INVARIANT(ClipSpacePosition);
	Output.FactoryInterpolants = VertexFactoryGetInterpolantsVSToPS(Input,VFIntermediates,VertexParameters);
}

void MainPS(
	FSimpleMeshPassVSToPS Input
	,out float4 OutColor : SV_Target0)
{
	float3 Color = float3(1.0,0.0,0.0);
	OutColor = float4(Color,1);
}